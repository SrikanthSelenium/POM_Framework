<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="70455" started-at="2020-10-21T16:12:36Z" finished-at="2020-10-21T16:13:46Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="40255" started-at="2020-10-21T16:12:36Z" finished-at="2020-10-21T16:13:16Z">
      <class name="myProject.practest.test.testScripts.LoginTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="beforeTest" is-config="true" duration-ms="14982" started-at="2020-10-21T16:12:36Z" finished-at="2020-10-21T16:12:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="beforeClass" is-config="true" duration-ms="1" started-at="2020-10-21T16:12:51Z" finished-at="2020-10-21T16:12:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2020-10-21T16:12:52Z" finished-at="2020-10-21T16:12:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void myProject.practest.test.testScripts.LoginTest.testLoginToApplication(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLoginToApplication(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="testLoginToApplication" duration-ms="10739" started-at="2020-10-21T16:12:52Z" data-provider="testData" finished-at="2020-10-21T16:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[user123@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[test123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginToApplication -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-21T16:13:03Z" finished-at="2020-10-21T16:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginToApplication status=SUCCESS method=LoginTest.testLoginToApplication(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-10-21T16:13:03Z" finished-at="2020-10-21T16:13:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void myProject.practest.test.testScripts.LoginTest.testLoginToApplication(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testLoginToApplication(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="testLoginToApplication" duration-ms="12311" started-at="2020-10-21T16:13:03Z" data-provider="testData" finished-at="2020-10-21T16:13:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[user123@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[test123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginToApplication -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-10-21T16:13:15Z" finished-at="2020-10-21T16:13:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginToApplication status=SUCCESS method=LoginTest.testLoginToApplication(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2020-10-21T16:13:15Z" finished-at="2020-10-21T16:13:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void myProject.practest.test.testScripts.LoginTest.testLoginToApplication(java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="testLoginToApplication(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="testLoginToApplication" duration-ms="0" started-at="2020-10-21T16:13:15Z" data-provider="testData" finished-at="2020-10-21T16:13:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[user123@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[test123]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Test not set for Run]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Test not set for Run
at myProject.practest.test.testScripts.LoginTest.testLoginToApplication(LoginTest.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginToApplication -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-10-21T16:13:15Z" finished-at="2020-10-21T16:13:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-10-21T16:13:15Z" finished-at="2020-10-21T16:13:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginToApplication status=SKIP method=LoginTest.testLoginToApplication(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:myProject.practest.test.testScripts.LoginTest@48ae9b55]" name="afterTest" is-config="true" duration-ms="1292" started-at="2020-10-21T16:13:15Z" finished-at="2020-10-21T16:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- myProject.practest.test.testScripts.LoginTest -->
    </test> <!-- Test -->
    <test name="Test1" duration-ms="30140" started-at="2020-10-21T16:13:16Z" finished-at="2020-10-21T16:13:46Z">
      <class name="myProject.practest.test.testScripts.RegistrationTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e]" name="beforeSuite" is-config="true" duration-ms="150" started-at="2020-10-21T16:12:36Z" finished-at="2020-10-21T16:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e]" name="beforeTest" is-config="true" duration-ms="11723" started-at="2020-10-21T16:13:16Z" finished-at="2020-10-21T16:13:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-10-21T16:13:28Z" finished-at="2020-10-21T16:13:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-10-21T16:13:28Z" finished-at="2020-10-21T16:13:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void myProject.practest.test.testScripts.RegistrationTest.testApplicationRegistration() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testApplicationRegistration()[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e]" name="testApplicationRegistration" duration-ms="17256" started-at="2020-10-21T16:13:28Z" finished-at="2020-10-21T16:13:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplicationRegistration -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-10-21T16:13:45Z" finished-at="2020-10-21T16:13:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testApplicationRegistration status=SUCCESS method=RegistrationTest.testApplicationRegistration()[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-10-21T16:13:45Z" finished-at="2020-10-21T16:13:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:myProject.practest.test.testScripts.RegistrationTest@7ed7259e]" name="afterTest" is-config="true" duration-ms="1158" started-at="2020-10-21T16:13:45Z" finished-at="2020-10-21T16:13:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- myProject.practest.test.testScripts.RegistrationTest -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
